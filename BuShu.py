# -*- coding: utf-8 -*-

"""

Automatically generated by Colaboratory.


# Colab云端部署

# 使用说明：

*   代码基于https://github.com/camenduru/【将此括号自行更换成"s*****-d********-webui】内容进行了修改调整
*   由于官方对免费用户限制，修改代码绕开运行警告
*   Pro用户同样可用
*   Colab云免费空间为50G,若一些插件或者模型不需要，可以注释或者删除
*   Colab云断开后所有内容会清空，所以出图后可先保存到google云盘在下载到个人电脑
*   由BBrother二次修改代码内容以绕过Colab的检测，并增加了选择下载模型的功能

## 使用方法：

首次运行步骤：

1.   新建网页，登录谷歌云盘(https://drive.google.com/)
点击左上角新建—更多-关联更多应用-搜索Colaboratory，点击进入安装
2.   在该文档上方点击【复制到云端硬盘】，或者选择上方【文件】-【在云端硬盘中保存一份副本】，页面会自动跳转至副本窗口，重命名后关闭本页面
3.   在副本页面中，选择上方【代码执行程序】-【更改运行时类型】，免费用户GPU选择【T4】，Pro用户可选【A100】或【V100】，点击保存
4.   点击右上角【连接】按钮，等待成功连接后会出现绿色对勾
5.   点击下方【安装环境并运行】运行按钮，等待10分钟左右，出现网址链接，任意点开一个即可进入
6.   之后就和本地部署一样了

## 部署涵盖的插件列表：
手动将所有的括号换成指定的内容：
(s)=s t a b l e
(d)=d i f f u s i o n
1.   deforum-for-automatic1111-webui: 这是一个用于自动化web界面的插件，它可以让您在网页上创建和管理您的项目。
2.   (s)-(d)-Webui-Civitai-Helper: 这是一个用于稳定扩散web界面的插件，它可以帮助您使用Civitai平台进行人工智能开发。
3.   sd-web-controlnet: 这是一个用于sd-web的插件，它可以让您控制和监控您的网络状态。
4.   openpose-editor: 这是一个用于编辑人体姿态的插件，它可以让您在web界面上对人体姿态进行修改和优化。
5.   sd-web-depth-lib: 这是一个用于sd-web的插件，它可以让您使用深度学习库进行图像处理。
6.   (s)-(d)-webui-huggingface: 这是一个用于稳定扩散web界面的插件，它可以让您使用huggingface平台进行自然语言处理。
7.   sd-web-additional-networks: 这是一个用于sd-web的插件，它可以让您使用额外的网络模型进行图像处理。
8.   posex: 这是一个用于生成人体姿态的插件，它可以让您在web界面上创建和编辑人体姿态。
9.   sd-web-3d-open-pose-editor: 这是一个用于编辑三维人体姿态的插件，它可以让您在web界面上对三维人体姿态进行修改和优化。
10.   sd-web-t'u'n'n'e'l's: 这是一个用于sd-web的插件，它可以让您使用隧道技术进行网络连接。
11.   batchlinks-webui: 这是一个用于批量下载链接的插件，它可以让您在web界面上输入和管理链接。
12.   (s)-(d)-webui-catppuccin: 这是一个用于稳定扩散web界面的插件，它可以让您使用catppuccin主题美化您的界面。
13.   (s)-(d)-webui-rembg: 这是一个用于稳定扩散web界面的插件，它可以让您使用rembg工具去除图像背景。
14.   (s)-(d)-webui-two-shot: 这是一个用于稳定扩散web界面的插件，它可以让您使用two-shot技术生成图像。
15.   sd-web-aspect-ratio-helper: 这是一个用于sd-web的插件，它可以帮助您调整图像的纵横比。
16.   adetailer: 这是一个用于增强图像细节的插件，它可以让您在web界面上对图像进行放大和清晰化。
17.   sd-dynamic-thresholding: 这是一个用于sd-web的插件，它可以让您使用动态阈值法进行图像分割。
18.   sd-dynamic-prompts: 这是一个用于sd-web的插件，它可以让您使用动态提示法生成图像。
19.   (s)-(d)-webui-wildcards: 这是一个用于稳定扩散web界面的插件，它可以让您使用通配符法生成图像。
20.   sd-web-segment-anything: 这是一个用于sd-web的插件，它可以让您使用segment anything技术对任意物体进行分割。
21.   (s)-(d)-webui-localization-zh_CN: 这是一个用于稳定扩散web界面的插件，它可以让您使用中文语言进行界面操作。
22.   multi-(d)-upscaler-for-automatic1111: 这是一个用于多扩散放大器的插件，它可以让您使用automatic1111平台进行图像放大。
23.   sd-web-prompt-all-in-one: 这是一个用于sd-web的插件，它可以让您使用一体化提示法生成图像。

# 环境安装及运行
"""

import binascii
import os
import subprocess
import wget
import fileinput
import requests
import datetime
import re

# 初始化变量
a = ""
b = ""
c = ""
d = ""
D = ""
w = ""
st = ""
ca = ""
t = ""

# 打开并执行txt文件
with open('BianLiang.txt', 'r') as file:
    code = file.read()

# 去除每行开头和结尾的空格、空行等
cleaned_code = '\n'.join(line.strip() for line in code.splitlines() if line.strip())

# 执行干净的代码
exec(cleaned_code)

# 使用subprocess运行git clone命令
def run_git_clone(repo_url, destination):
    subprocess.run(["git", "clone", repo_url, destination])

extensions_path = "/content/extensions"

extensions_to_clone = [
    (f"https://github.com/camenduru/stable-diffusion-webui-huggingface", f"{extensions_path}/stable-diffusion-webui-huggingface"),
    (f"https://github.com/hnmr293/posex", f"{extensions_path}/posex"),
    (f"https://github.com/dtlnor/stable-diffusion-webui-localization-zh_CN", f"{extensions_path}/stable-diffusion-webui-localization-zh_CN"),
    (f"https://github.com/hanamizuki-ai/stable-diffusion-webui-localization-zh_Hans", f"/extensions/stable-diffusion-webui-localization-zh_Hans"),
    (f"https://github.com/zanllp/sd-webui-infinite-image-browsing", f"{extensions_path}/sd-webui-infinite-image-browsing"),
    (f"https://github.com/s0md3v/roop", f"{extensions_path}/roop"),
    (f"https://github.com/Physton/sd-webui-prompt-all-in-one", f"{extensions_path}/sd-webui-prompt-all-in-one"),
    (f"https://github.com/etherealxx/batchlinks-webui", f"{extensions_path}/extensions/batchlinks-webui"), 
    (f"https://github.com/journey-ad/sd-webui-bilingual-localization", f"{extensions_path}/sd-webui-bilingual-localization"),
    (f"https://github.com/Bobo-1125/sd-webui-oldsix-prompt-dynamic", f"{extensions_path}/sd-webui-oldsix-prompt-dynamic"),
    (f"https://github.com/adieyal/sd-dynamic-prompts", f"{extensions_path}/sd-dynamic-prompts"),

    
]

for repo_url, destination in extensions_to_clone:
    run_git_clone(repo_url, destination)


# 定义一个函数来运行wget命令
def run_wget(url, output_path):
    wget_command = ["wget", url, "-O", output_path]
    subprocess.run(wget_command, check=True)

# 定义一个函数来创建文件夹（如果不存在的话）
def create_directory(directory):
    mkdir_command = ["mkdir", "-p", directory]
    subprocess.run(mkdir_command, check=True)
    